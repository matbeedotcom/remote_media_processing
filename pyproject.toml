[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "remotemedia"
version = "0.1.0"
description = "A Python SDK for distributed audio/video/data processing with remote offloading"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "RemoteMedia Team", email = "team@remotemedia.dev"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Multimedia :: Sound/Audio",
    "Topic :: Multimedia :: Video",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">=3.9"
dependencies = [
    "grpcio>=1.50.0",
    "grpcio-tools>=1.50.0",
    "protobuf>=4.21.0",
    "aiortc>=1.6.0",
    "numpy>=1.21.0",
    "cloudpickle>=2.2.0",
    "pydantic>=2.0.0",
    "websockets>=11.0.0",
    "aiohttp>=3.8.0",
    "typing-extensions>=4.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "twine>=4.0.0",
    "build>=0.10.0",
]
ml = [
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "torchaudio>=2.0.0",
    "transformers>=4.30.0",
    "opencv-python>=4.8.0",
    "pillow>=10.0.0",
    "librosa>=0.10.0",
    "scikit-learn>=1.3.0",
]

[project.scripts]
remotemedia = "remotemedia.cli:main"

[project.urls]
Homepage = "https://github.com/remotemedia/remotemedia-sdk"
Documentation = "https://remotemedia-sdk.readthedocs.io"
Repository = "https://github.com/remotemedia/remotemedia-sdk"
Issues = "https://github.com/remotemedia/remotemedia-sdk/issues"

[tool.setuptools.packages.find]
exclude = ["tests*", "examples*", "docs*"]

[tool.black]
line-length = 79
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
asyncio_default_test_loop_scope = "session"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "aiortc.*",
    "cloudpickle.*",
]
ignore_missing_imports = true 